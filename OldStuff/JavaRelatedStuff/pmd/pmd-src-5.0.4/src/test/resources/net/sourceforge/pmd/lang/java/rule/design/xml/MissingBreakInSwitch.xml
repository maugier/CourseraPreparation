<?xml version="1.0" encoding="UTF-8"?>
<test-data>
    <test-code>
        <description><![CDATA[
one case, which is not empty
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
	void main() {
		switch(i) {
		case 1:
			doSomething();
		default:
		}
	}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
just skip empty switch
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
	void main() {
		switch(i) {
		}
	}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
one break, but two cases + one default case. But there is an intentional fall through -
because there are no statemenets between case 1 and case 2.
     ]]></description>
     <!--
        Indeed if there is no statement between the two cases, then no break
    should be expected between those cases.
    In C, there is a MISRA rule 15.2 which states:

    "An unconditional break statement shall terminate every non-empty
    switch clause"
     -->
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
	void main() {
		switch(i) {
		case 1:
		case 2:
			break;
		default:
		}
	}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
each case stmt has a return
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
	int main() {
		switch(i) {
		case '1':
		 return 1;
		case '2':
		 return 2;
		default:
		 return 3;
		}
	}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
all cases have return or throw
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
	int main() {
		switch(i) {
		case '1':
		 return 1;
		case '2':
		 return 2;
		default:
		 throw new Exception("bad number");
		}
	}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
3496028: False-
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
  public void m() {
    switch (s) {
      case 0 :
        s2 = s ;
        // missing break here!
      case 1 :
        s2 = (short)(s + 1);
        break;
      default :
        s2 = (short)(s + 2);
        // and missing break here!
    }
  }
}
     ]]></code>
  </test-code>
</test-data>
